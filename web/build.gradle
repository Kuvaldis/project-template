import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
    dependencies {
        classpath 'be.filipblondeel.gradle:gradle-gulp-plugin:0.1'
    }
}

ext {
    nodeDir = "${project.projectDir}/node"
    nodeModulesDir = "${project.projectDir}/node_modules"
    bowerDir = "${project.projectDir}/vendor"
    distDir = "${project.projectDir}/dist"
    appDir = "${project.projectDir}/app"
}

apply plugin: 'node'
apply plugin: 'gulp'


node {
    version = '0.10.29'
    distBaseUrl = 'http://nodejs.org/dist'
    download = true
    workDir = file(nodeDir)
}

task cleanNode(type: Delete) {
    delete nodeModulesDir, bowerDir
}

task gulpBuildClean(type: Delete) {
    delete appDir, distDir
}

task clean << {
    println 'Run clean'
}
clean.dependsOn 'gulpBuildClean'

task gulpClean << {
    println 'Run gulp clean'
}
gulpClean.dependsOn 'gulp_clean'

gulp_build.dependsOn 'npmInstall'
gulp_build.dependsOn 'installGulp'
gulp_dist.dependsOn 'npmInstall'
gulp_dist.dependsOn 'installGulp'
installGulp.mustRunAfter 'npmInstall'

task bower(dependsOn: 'npmInstall', type: Exec) {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        commandLine "$nodeModulesDir/.bin/bower.cmd", 'install'
    } else {
        commandLine "$nodeModulesDir/.bin/bower", 'install'
    }

}

task dev << {
    println 'Run in dev mode'
}
dev.dependsOn 'bower'
dev.dependsOn 'gulp_dev'
dev.dependsOn 'npmInstall'
dev.dependsOn 'installGulp'
gulp_dev.mustRunAfter 'installGulp'

task test << {
    println 'Run tests'
}
test.dependsOn 'bower'
test.dependsOn 'gulp_test'
test.dependsOn 'npmInstall'
test.dependsOn 'installGulp'
gulp_test.mustRunAfter 'installGulp'

task zip(type: Zip) {
    baseName 'web'
    from("${project.projectDir}") {
        include 'app/**'
        include 'dist/**'
    }
    destinationDir = file("${project.projectDir}/distributions")
}

task build << {}
build.dependsOn 'bower'
build.dependsOn 'gulp_dist'
build.dependsOn 'zip'
gulp_dist.mustRunAfter 'bower'