allprojects {
    buildscript {
        repositories {
            mavenCentral()
            jcenter()
        }
    }

    version = '0.1'

    repositories {
        jcenter()
        mavenCentral()
    }
}

configure(subprojects - project('web')) {
    apply plugin: 'groovy'
    apply plugin: 'codenarc'
    apply plugin: 'project-report'

    sourceCompatibility = 1.7

    ext {
        v = [
                groovy    : '2.3.3',
                spring    : '4.0.5.RELEASE',
                slf4j     : '1.7.7',
                log4j     : '1.2.17',
                logback   : '1.1.2',
                spock     : '0.7-groovy-2.0',
                junit     : '4.11',
                cglib     : '3.1',
                servletApi: '3.1.0',
                objenesis : '2.1',
                codenarc  : '0.21'
        ]
    }
    dependencies {
        compile group: 'org.codehaus.groovy', name: 'groovy-all', version: v.groovy

        compile group: 'org.springframework', name: 'spring-context', version: v.spring
        compile group: 'org.slf4j', name: 'slf4j-api', version: v.slf4j
        compile(group: 'ch.qos.logback', name: 'logback-classic', version: v.logback) {
            exclude group: 'org.slf4j'
        }

        testCompile(group: 'org.spockframework', name: 'spock-core', version: v.spock) {
            exclude group: 'org.codehaus.groovy'
            exclude group: 'junit'
        }
        testCompile(group: 'junit', name: 'junit-dep', version: v.junit) {
            exclude group: 'org.hamcrest'
        }
        testRuntime group: 'cglib', name: 'cglib-nodep', version: v.cglib
        testRuntime group: 'org.objenesis', name: 'objenesis', version: v.objenesis

    }

    codenarc {
        ignoreFailures = true
        configFile = file("${project.parent.projectDir}/config/codenarc/codenarc.groovy")
        reportsDir = file("${project.parent.projectDir}/reports/codenarc/${project.name}")
        toolVersion = v.codenarc
    }

    project.reporting.baseDir = "${project.parent.projectDir}/reports"
    project.projectReportDirName = "project/${project.name}"
}

task clean(type: Delete) {
    delete "${project.projectDir}/reports"
}
